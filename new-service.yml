server:
  port: 8383

spring:
  application:
    name: new-service
  logging:
    pattern:
      console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    level:
      org.springframework: WARN
      org.hibernate: WARN
      com.netflix.ribbon: DEBUG
      com.netflix.hystrix: DEBUG
  zipkin:
    locator:
      discovery:
        enabled: true
    base-url: ${ZIPKIN_URL}
  sleuth:
    sampler:
      probability: 1
  datasource:
    url: jdbc:h2:mem:new-db
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL}
  instance:
    instanceId: ${spring.application.name}:${random.value}
    leaseRenewalIntervalInSeconds: 5
    preferIpAddress: true


management:
  security:
    enabled: false

ribbon:
  eureka:
    enabled: false
  
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
        loggerLevel: full
  hystrix:
    enabled: true


hystrix:
  threadpool:
    default:
      coreSize: 10
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
      circuitBreaker:
        requestVolumeThreshold: 5
        errorThresholdPercentage: 50
        sleepWindowInMilliseconds: 10000
      metrics:
        rollingStats:
          timeInMilliseconds: 10000
